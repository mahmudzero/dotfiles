#!/usr/bin/env zsh
# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

######### MISC #########################################################################################################
export EDITOR=vim
export GIT_EDITOR=vim
export PAGER="less -S"
export WINROOT="/mnt/c"
export WINHOME="$WINROOT/Users/duelw"
export WINTERMSETTINGS="$WINHOME/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json"
export WINAPPDATA="$WINHOME/AppData"
export D2PREFS="$WINAPPDATA/Roaming/Bungie/DestinyPC/prefs"

alias sl='ls'
alias py='python3'
alias python='python3'
alias dc='docker-compose'
alias d='docker'
alias v='vim'
alias t='tree'

function alias_vim {
	alias vim='nvim'
}

function unalias_vim {
	unalias vim
}

function zedo {
	TMUX_PANE="" TMUX="" zed "$@"
}

function code {
	TMUX_PANE="" TMUX="" open -a vsc "$@"
}

function codei {
	TMUX_PANE="" TMUX="" open -a vsci "$@"
}

function dprune-all {
	docker kill $(docker ps -q)
	docker system prune -af --volumes
	docker volume kill $(docker volume ls -q)
	echo $(docker system df)
}

if [[ "$(uname)" == "Darwin" ]]; then
	export ICLOUD_DRIVE="$HOME/Library/Mobile Documents/"
	export PATH="/opt/homebrew/bin:$PATH"
	export PATH="/opt/homebrew/opt/postgresql@16/bin:$PATH"
	eval $(/opt/homebrew/bin/brew shellenv)

	function nosleep {
		caffeinate -dimsu
	}
else
	export ICLOUD_DRIVE="$HOME/winhome/iCloudDrive"
	[[ ! -f /home/linuxbrew/.linuxbrew/bin/brew ]] || eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
fi

if type brew &>/dev/null
then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

  autoload -Uz compinit
  compinit
fi
######### MISC #########################################################################################################

######### SEARCH #######################################################################################################
function gv {
	ggv_dir="./"
	maxc=${2:--1}
	gres=""
	if [ $maxc -ge 1 ]; then
		gres=$(grep -rnE --max-count=$maxc $1 $ggv_dir | fzy)
	else
		gres=$(grep -rnE $1 $ggv_dir | fzy)
	fi

	ggv_file=$(echo $gres | awk '{split($0, a, ":"); print a[1]}')
	ggv_ln=$(echo $gres | awk '{split($0, a, ":"); print("+" a[2])}')
	echo "reading file $ggv_file"
	if [[ $ggv_file ]]; then
		cmd="vim $ggv_file $ggv_ln"
		eval ${cmd}
		print -s $cmd
	fi
}

function ggv {
	ggv_dir="./"
	maxc=${2:--1}
	gres=""
	if [ $maxc -ge 1 ]; then
		gres=$(git grep -rnE --max-count=$maxc $1 $ggv_dir | fzy)
	else
		gres=$(git grep -rnE $1 $ggv_dir | fzy)
	fi

	ggv_file=$(echo $gres | awk '{split($0, a, ":"); print a[1]}')
	ggv_ln=$(echo $gres | awk '{split($0, a, ":"); print("+" a[2])}')
	echo "reading file $ggv_file"
	if [[ $ggv_file ]]; then
		cmd="vim $ggv_file $ggv_ln"
		eval ${cmd}
		print -s $cmd
	fi
}
######### SEARCH #######################################################################################################

######### GIT ##########################################################################################################
function gwl {
	git worktree list
}

function gpn {
	git push -u origin $(git branch --show-current)
}

function gwn {
	dir=${2:-$1}
	cmd="git worktree add -b $1 ../$dir"
	eval ${cmd}
	cd ../$dir
	print -s $cmd
}

function gwr {
	dir=""
	if [[ $3 ]]; then
		dir=$2
	else
		dir=${2:-$1}
	fi

	rem=""
	if [[ $3 ]]; then
		rem=$3
	else
		rem=$dir
	fi

	cmd="git worktree add -b $1 ../$dir origin/$rem"
	eval ${cmd}
	cd ../$dir
	print -s $cmd
}

function gwd {
	b=$1
	cmd="git worktree remove $b"
	eval ${cmd}
	print -s $cmd
	cmd="git branch -D $b"
	eval ${cmd}
	print -s $cmd
}

function git_prune_remote {
	git remote update origin --prune
}
######### GIT ##########################################################################################################

######### PROF #########################################################################################################
([[ $USER != "mahpi" ]] && [[ ! -f $HOME/.p10k.zsh ]]) || source $HOME/.p10k.zsh
[[ ! -f $HOME/.profile ]] || source $HOME/.profile
######### PROF #########################################################################################################


######### RUBY #########################################################################################################
[[ ! -d $HOME/.rbenv ]] || eval "$($HOME/.rbenv/bin/rbenv init - --no-rehash zsh)"
######### RUBY #########################################################################################################

######### NODE #########################################################################################################
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"                   # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion
######### NODE #########################################################################################################

######### GO ###########################################################################################################
export PATH="$HOME/go/bin:$PATH"
export GO_HAS_DEFAULT_ALIAS=$(alias | grep "^go=")
export GO_DEFAULT_ALIAS_PATH=$(which go)
function usego {
	alias go=$(which "go$1")
}

function resetgo {
	if [[ $GO_HAS_DEFAULT_ALIAS ]]; then
		alias go=$GO_DEFAULT_ALIAS_PATH
	else
		unalias go
	fi
}
######### GO ###########################################################################################################

######### RUST #########################################################################################################
export RUSTUP_HOME="$HOME/rust/.rustup"
export CARGO_HOME="$HOME/rust/.cargo"
export PATH="$HOME/rust/.cargo/bin:$PATH"
######### RUST #########################################################################################################

######### SET ##########################################################################################################
[[ $USER != "mahpi" ]] && type nvim &>/dev/null && alias_vim
set -o vi
bindkey '^x^e' edit-command-line
######### SET ##########################################################################################################
